{"ast":null,"code":"var _jsxFileName = \"/Users/nambi/react_proj/my-app/src/Components/TextForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n\n  const [text, setText] = useState(\"\"); // text = \"hdshjg\"; wrong way to change the vlaue of text\n  // setText(\"here\"); correct way to change the text;\n\n  const handleUpChange = () => {\n    console.log(\"Uppercase is clicked \" + text);\n    let upperText = text.toUpperCase();\n    setText(upperText);\n    props.showAlert(\"UpperCase Converted \", \"success\");\n  };\n\n  const handleOnChange = event => {\n    console.log(\"onChanged\");\n    setText(event.target.value);\n  };\n\n  const handleLoChange = () => {\n    let lowerText = text.toLowerCase();\n    setText(lowerText);\n    props.showAlert(\"LowerCase Converted \", \"success\");\n  };\n\n  const handleClearText = () => {\n    let clearText = '';\n    setText(clearText);\n    props.showAlert(\"TextCleared\", \"success\");\n  };\n\n  const handleCopy = () => {\n    var text = document.getElementById(\"myBox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    document.getSelection().removeAllRanges();\n    props.showAlert(\"Copyied to clipboard \", \"success\");\n  };\n\n  let setStyle = {\n    color: props.mode === 'dark' ? 'White' : 'black',\n    backgroundColor: props.mode === 'light' ? 'white' : 'grey'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: props.mode === {\n            color: 'black'\n          } ? {\n            color: 'white'\n          } : {\n            color: 'red'\n          }\n        },\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          style: {\n            backgroundColor: props.mode === {\n              backgroundColor: 'dark'\n            } ? {\n              backgroundColor: '#13466e'\n            } : {\n              backgroundColor: 'white'\n            },\n            color: props.mode === 'dark' ? 'white' : '#042743'\n          },\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"button btn btn btn-primary mx-2 my-2\",\n        onClick: handleUpChange,\n        children: \"Convert To Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"button btn btn btn-primary mx-2 my-2\",\n        onClick: handleLoChange,\n        children: \"Convert To LowerCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"button btn btn btn-primary mx-2 my-2\",\n        onClick: handleClearText,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"button btn btn btn-primary mx-2 my-2\",\n        onClick: handleCopy,\n        children: \"Copy Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : '#042743'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").filter(element => {\n          return element.length !== 0;\n        }).length, \"words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(\"\").length, \" minutes to read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : 'Enter Your Text to Preview'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TextForm, \"/31x6IKLd9hKJNRoFN2Lb7ghI70=\");\n\n_c = TextForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"sources":["/Users/nambi/react_proj/my-app/src/Components/TextForm.js"],"names":["React","useState","TextForm","props","text","setText","handleUpChange","console","log","upperText","toUpperCase","showAlert","handleOnChange","event","target","value","handleLoChange","lowerText","toLowerCase","handleClearText","clearText","handleCopy","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","setStyle","color","mode","backgroundColor","heading","length","split","filter","element"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nexport default function TextForm(props) {\n\n    const [text,setText] = useState(\"\");\n    // text = \"hdshjg\"; wrong way to change the vlaue of text\n    // setText(\"here\"); correct way to change the text;\n\n    const  handleUpChange = () =>{\n        console.log(\"Uppercase is clicked \"+text);\n        let upperText = text.toUpperCase();\n        setText(upperText);\n        props.showAlert(\"UpperCase Converted \",\"success\");\n    }\n    const handleOnChange = (event) => {\n        console.log(\"onChanged\");\n        setText(event.target.value);\n    }\n\n    const handleLoChange = () => {\n        let lowerText = text.toLowerCase();\n        setText(lowerText);\n        props.showAlert(\"LowerCase Converted \",\"success\");\n\n    }\n\n    const handleClearText = () => {\n        let clearText = '';\n        setText(clearText);\n        props.showAlert(\"TextCleared\",\"success\");\n\n    }\n\n    const handleCopy = () => {\n       var text = document.getElementById(\"myBox\")\n        text.select();\n        navigator.clipboard.writeText(text.value);\n        document.getSelection().removeAllRanges();\n        props.showAlert(\"Copyied to clipboard \",\"success\");\n\n    }\n\n    let setStyle = {\n        color: props.mode === 'dark'?'White':'black',\n        backgroundColor: props.mode === 'light'?'white':'grey'\n    }\n\n    \n\n    return (\n        <>\n        \n        <div className='container' >\n            <h1 style={ {color: props.mode=== {color:'black'} ? {color:'white'} : {color:'red'}} }>{props.heading}</h1> \n            <div className=\"mb-3\">\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==={backgroundColor:'dark'}?{backgroundColor:'#13466e'}:{backgroundColor:'white'}, color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n            </div>                                                                                                                                                                 \n            <button disabled={text.length===0} className=\"button btn btn btn-primary mx-2 my-2\" onClick={handleUpChange}>Convert To Uppercase</button>\n            <button disabled={text.length===0} className=\"button btn btn btn-primary mx-2 my-2\" onClick={handleLoChange}>Convert To LowerCase</button>\n            <button disabled={text.length===0} className=\"button btn btn btn-primary mx-2 my-2\" onClick={handleClearText}>Clear Text</button>\n            <button disabled={text.length===0} className=\"button btn btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\n\n        </div>\n\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\n            <h2>Your Text Summary</h2>\n            <p>{text.split(\" \").filter((element)=>{return element.length !==0}).length}words and {text.length} characters</p>\n            <p>{0.008 * text.split(\"\").length} minutes to read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:'Enter Your Text to Preview'}</p>\n        </div>\n\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
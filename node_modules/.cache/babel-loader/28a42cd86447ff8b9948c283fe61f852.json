{"ast":null,"code":"var _jsxFileName = \"/Users/nambi/react_proj/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\nimport About from './Components/About';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport { BrowserRouter as Router, Switch, Route, Link, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode('dark');\n      document.body.style.backgroundColor = \"grey\"; //#042743\n\n      showAlert(\"Dark mode is enabled\", \"success\");\n      document.title = \"TextUtils - Enabled Dark Mode\"; // setInterval(() => {\n      //   document.title = \"TextUtils - Enabled Dark Mode\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"TextUtils install now\";\n      // }, 1500);\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\", \"success\");\n      document.title = \"TextUtils - Enabled Light Mode\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TEXTUTILS\",\n        about: \"ABOUT US\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            component: about,\n            children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(TextForm, {\n              heading: \"Enter the text to analyze\",\n              showAlert: showAlert\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"QWu0QpbEF50KcvttgEfF5q8xP20=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nambi/react_proj/my-app/src/App.js"],"names":["React","useState","About","Alert","Navbar","TextForm","BrowserRouter","Router","Switch","Route","Link","Routes","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","about"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,MALF,QAOO,kBAPP;;;;AAUA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBb,QAAQ,CAAC,OAAD,CAA/B;AAEA,QAAM,CAACc,KAAD,EAAOC,QAAP,IAAmBf,QAAQ,CAAC,IAAD,CAAjC;;AAEA,QAAMgB,SAAS,GAAG,CAACC,OAAD,EAASC,IAAT,KAAkB;AAClCH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,GAAG,EAAGF,OADC;AAEPC,MAAAA,IAAI,EAAGA;AAFA,KAAD,CAAR;AAIAE,IAAAA,UAAU,CAAC,MAAM;AACfL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAID,GATD;;AAWA,QAAMM,UAAU,GAAG,MAAM;AACvB,QAAGT,IAAI,KAAK,OAAZ,EAAoB;AAClBC,MAAAA,OAAO,CAAC,MAAD,CAAP;AACAS,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,MAAtC,CAFkB,CAE4B;;AAC9CT,MAAAA,SAAS,CAAC,sBAAD,EAAwB,SAAxB,CAAT;AACAM,MAAAA,QAAQ,CAACI,KAAT,GAAiB,+BAAjB,CAJkB,CAMlB;AACA;AACA;AACA;AACA;AACA;AACD,KAZD,MAaI;AACFb,MAAAA,OAAO,CAAC,OAAD,CAAP;AACAS,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;AACAT,MAAAA,SAAS,CAAC,oBAAD,EAAsB,SAAtB,CAAT;AACAM,MAAAA,QAAQ,CAACI,KAAT,GAAiB,gCAAjB;AAGD;AACF,GAtBD;;AAuBA,sBACE;AAAA,2BACA,QAAC,MAAD;AAAA,8BACA,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,KAAK,EAAC,UAAhC;AAA2C,QAAA,IAAI,EAAEd,IAAjD;AAAuD,QAAA,UAAU,EAAES;AAAnE;AAAA;AAAA;AAAA;AAAA,cADA,eAGA,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEP;AAAd;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BAEA,QAAC,MAAD;AAAA,kCACM,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,SAAS,EAAEa,KAAhC;AAAA,mCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADN,eAKM,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAA,mCACE,QAAC,QAAD;AAAU,cAAA,OAAO,EAAC,2BAAlB;AAA8C,cAAA,SAAS,EAAEX;AAAzD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAsBD;;GA9DQL,G;;KAAAA,G;AAgET,eAAeA,GAAf","sourcesContent":["// import logo from './logo.svg';\nimport React, { useState } from 'react';\n\nimport './App.css';\nimport About from './Components/About';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Routes,\n  \n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode,setMode] = useState('light');\n\n  const [alert,setAlert] = useState(null);\n\n  const showAlert = (message,type) => {\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n\n  }\n\n  const toggleMode = () => {\n    if(mode === \"light\"){\n      setMode('dark');\n      document.body.style.backgroundColor = \"grey\"; //#042743\n      showAlert(\"Dark mode is enabled\",\"success\");\n      document.title = \"TextUtils - Enabled Dark Mode\";\n\n      // setInterval(() => {\n      //   document.title = \"TextUtils - Enabled Dark Mode\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"TextUtils install now\";\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\",\"success\");\n      document.title = \"TextUtils - Enabled Light Mode\";\n\n\n    }\n  }\n  return (\n    <>\n    <Router>\n    <Navbar title=\"TEXTUTILS\" about=\"ABOUT US\" mode={mode} toggleMode={toggleMode}/>\n\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n\n    <Routes>\n          <Route path=\"/about\" component={about}>\n            <About />\n          </Route>\n          \n          <Route path=\"/\">\n            <TextForm heading=\"Enter the text to analyze\" showAlert={showAlert} />\n          </Route>\n        </Routes>\n    </div>\n    </Router>\n    </>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}